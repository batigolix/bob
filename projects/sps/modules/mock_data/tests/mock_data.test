<?php

/**
 * @file
 * Tests for Mock Data.module.
 * ECWeb MULTISITE QA
 */

/**
 * Defines a base class for testing the "Mock Data" module.
 */
class MockDataWebTestCase extends DrupalWebTestCase {

  /**
   * Returns test information.
   * 
   * @return array
   *   Info
   */
  public static function getInfo() {
    return array(
      'name' => 'Mock Data tests',
      'description' => 'Test the Mock Data config module.',
      'group' => 'Mock Data',
    );
  }

  /**
   * Test Info File.
   * 
   * TestFile <featurename>.info
   */
  public function testInfoFile() {
    $module = basename(__FILE__, ".test");
    $path = drupal_get_path('module', $module) . '/' . $module . '.info';
    $info = drupal_parse_info_file($path);

    // Add name information. Ex: name=Newsletters.
    $this->assertTrue(array_key_exists('name', $info), 'The module\'s name is available.' . $module);

    // Add description information.
    // Ex: description = Publish and send newsletters to lists of subscribers.
    $this->assertTrue(array_key_exists('description', $info), 'The module\'s description is available.');

    // Add package information.
    // Ex: package = Multisite_features
    $this->assertTrue(array_key_exists('package', $info), 'The module\'s package is available.');

    // Add core information.
    // Ex core = 7.x.
    $this->assertTrue(array_key_exists('core', $info), 'The Drupal core version is available.');
    $this->assertEqual($info['core'], '7.x');

    // Add php information.
    // Ex: php = 5.2.4.
    $this->assertTrue(array_key_exists('php', $info), 'The PHP version info is available.');
    $this->assertEqual($info['php'], '5.2.4');

    // Add version information.
    // (check if the version number matches with this page title).
    // Ex: version = 7.x-1.0
    $this->assertTrue(array_key_exists('version', $info));
  }
}

<?php

/**
 * @file
 * This file contains the connect_country install functions
 */

/**
 * Implements hook_install().
 * 
 * Creates vocabulary, terms, fields
 */
function tic_install() {

  // Create newsletter vocabulary
  $description = $vocabulary = (object) array(
        'name' => t('Newsletter subscriptions'),
        'description' => t('Newsletter subscriptions'),
        'machine_name' => 'newsletter_subscriptions',
  );
  taxonomy_vocabulary_save($vocabulary);

  // Populate newsletter taxonomy
  $vocab = taxonomy_vocabulary_machine_name_load('newsletter_subscriptions');
  // Todo set real newsletters (or decide it is a UI job).
  $terms = array(
    'Newsletter ABC',
    'Newsletter DEF',
    'Newsletter XYZ',
  );
  foreach ($terms as $term) {
    taxonomy_term_save((object) array(
          'name' => $term,
          'vid' => $vocab->vid,
    ));
  }

//  // Creates field "newsletter subscription".
//  if (!field_info_field('field_newsletter_subscriptions')) {
//    $field = array(
//      'field_name' => 'field_newsletter_subscriptions',
//      'type' => 'taxonomy_term_reference',
//      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
//      'settings' => array(
//        'allowed_values' => array(
//          array(
//            'vocabulary' => 'newsletter_subscriptions',
//            'parent' => 0,
//          ),
//        ),
//      ),
//    );
//    field_create_field($field);
//
//    $instance = array(
//      'field_name' => 'field_newsletter_subscriptions',
//      'entity_type' => 'user',
//      'label' => 'Newsletter subscription',
//      'bundle' => 'user',
//      'widget' => array(
//        'type' => 'options_select',
//        'weight' => -4,
//      ),
//      'display' => array(),
//    );
//    field_create_instance($instance);
//  }
//
//  // Creates field "first name".
//  if (!field_info_field('field_first_name')) {
//    $field = array(
//      'field_name' => 'field_first_name',
//      'type' => 'text',
//    );
//    field_create_field($field);
//    $instance = array(
//      'field_name' => 'field_first_name',
//      'entity_type' => 'user',
//      'label' => 'First name',
//      'bundle' => 'user',
//      'widget' => array(
//        'type' => 'textfield',
//      ),
//    );
//    field_create_instance($instance);
//  }
//
//  // Creates field "last name".
//  if (!field_info_field('field_last_name')) {
//    $field = array(
//      'field_name' => 'field_last_name',
//      'type' => 'text',
//    );
//    field_create_field($field);
//    $instance = array(
//      'field_name' => 'field_last_name',
//      'entity_type' => 'user',
//      'label' => 'Last name',
//      'bundle' => 'user',
//      'widget' => array(
//        'type' => 'textfield',
//      ),
//    );
//    field_create_instance($instance);
//  }
//
//  // Creates field "gender".
//  if (!field_info_field('field_gender')) {
//    $field = array(
//      'field_name' => 'field_gender',
//      'type' => 'list_text',
//      'settings' => array(
//        'allowed_values' => array(
//          'f' => 'Female',
//          'm' => 'Male',
//        ),
//      ),
//    );
//    field_create_field($field);
//    $instance = array(
//      'field_name' => 'field_gender',
//      'entity_type' => 'user',
//      'label' => 'Gender',
//      'bundle' => 'user',
//      'widget' => array(
//        'type' => 'options_select',
//      ),
//      'display' => array(
//      ),
//    );
//    field_create_instance($instance);
//  }
//
//  // Creates field "country".
//  if (module_exists('ec_world_countries')) {
//    if (!field_info_field('field_country')) {
//
//      $field = array(
//        'field_name' => 'field_country',
//        'type' => 'taxonomy_term_reference',
//        'settings' => array(
//          'allowed_values' => array(
//            array(
//              'vocabulary' => 'ec_world_countries',
//              'parent' => 0,
//            ),
//          ),
//        ),
//      );
//      field_create_field($field);
//
//      $instance = array(
//        'field_name' => 'field_country',
//        'entity_type' => 'user',
//        'label' => 'Country',
//        'bundle' => 'user',
//        'widget' => array(
//          'type' => 'options_select',
//          'weight' => -4,
//        ),
//        'display' => array(),
//      );
//      field_create_instance($instance);
//    }
//  }
}

/**
 * Implements hook_uninstall().
 * 
 * Deletes fields
 */
function tic_uninstall() {
  $fields = array(
    'field_newsletter_subscriptions',
    'field_first_name',
    'field_last_name',
    'field_gender',
    'field_country',
  );
  foreach ($fields as $field) {
    if (!field_info_field($field)) {
      field_delete_field($field);
    }
  }
  field_purge_batch(count($fields));
  // TODO test if field delete works
  // TODO delete terms
  // TODO delete vocab
}

/**
 * TODO get iso code in there
 */
function tic_update_7024() {
  if (module_exists('ec_world_countries')) {
    $vocab = taxonomy_vocabulary_machine_name_load('ec_world_countries');
    include_once(DRUPAL_ROOT . '/' . drupal_get_path('module', 'ec_world_countries') . '/includes/countries.php');
    dd($country_array);
    foreach ($country_array as $continent => $countries) {
      // TODO get them in
//      $term = (object) array('vid' => $vocab->vid, 'name' => st($continent),);
//      taxonomy_term_save($term);
//      $parent_tid = $term->tid;
//      foreach ($countries as $country => $cy_name) {
//        $values = array(
//          'type' => 'ec_world_countries',
//          'bundle' => 'ec_world_countries',
//        );
//        $entity = entity_create('taxonomy_term', $values);
//        $ewrapper = entity_metadata_wrapper('taxonomy_term', $entity);
//        $ewrapper->name->set($cy_name);
//        $ewrapper->field_code->set($country);
//        $ewrapper->parent->set($parent_tid);
//        $ewrapper->vid->set($vocab->vid);
//        $ewrapper->bundle->set('ec_world_countries');
//        $ewrapper->save();
//      }
    }
  }
}

function tic_update_7023() {
  if (module_exists('ec_world_countries')) {
    $vocab = taxonomy_vocabulary_machine_name_load('ec_world_countries');
    $query = new EntityFieldQuery();
    $result = $query
        ->entityCondition('entity_type', 'taxonomy_term')
        ->propertyCondition('vid', $vocab->vid)
        ->execute();
    foreach ($result['taxonomy_term'] as $term) {
      taxonomy_term_delete($term->tid);
    }
  }
}
